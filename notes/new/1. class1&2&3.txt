SYLLABUS
----------
-INTRODUCTION OF JAVA
MODULE-1
---------
1.BASIC STRUCTURE OF PROGRAM
2.ARCHITECTURE OF JAVA
3.DATA TYPES
4.VARIABLES
5.KEYWORDS AND IDENTIFIERS
6.OPERATORS AND TYPES
5.CONDITIONAL STATEMENTS
6.SWITCH CASE STATEMENTS
7.LOOPING STATEMENT
8.PATTERN PROGRAMMING
10.GENERAL PROGRAMS BASED ON FOR AND WHILE LOOPS

MODULE-2
-----------
11.METHODS AND METHOD OVERLOADING
12.VARIABLES AND ITS TYPES
13.ACCESSING DATAMEMBER IN MEMBERFUNCTION
14.EXECUTION PROCESS
15.CONSTRUCTORS
16.CONSTRUCTOR OVERLOADING
17.THIS KEYWORD
18.CONSTRUCTOR CHAINING
19.UML DIAGRAMS

MODULE-3
---------
-OOPS
------
20.INHERITANCE
21.METHOD OVERRIDING AND SUPER KEYWORD
22.ABSTRACTION
23.INTERFACE
24.ACCESS SPECIFIER
25.ENCAPSULATION
26.POLYMORPHISM AND METHOD BINDING
27.GENERALISATION AND SPECILALISATION
28.TYPE CASTING
29.OBJECT CASTING

MODULE-4
---------
30.OBJECT CLASS
31.STRING CLASS
32.ARRAY PROGRAMMING
33.EXCEPTION HANDLING
34.WRAPPER CLASSES
35.COLLECTIONS FRAMEWORK
36.MAPS
37.MULTITHREADING

Introduction
-------------
AUTHOR               : JAMES GOSLING
VENDOR               : SUN MICRO SYSTEM(ORACLE)
PROJECT NAME         : GREEN TEAM
TYPE                 : OPEN SOURCE
INITIAL NAME         : OAK
PRESENT NAME         : JAVA
EXT                  :.java,.class,.jar
PRESENT VERSION      : java14
OPERATING SYSTEM     : ANY OPERATING SYSTEM
BASIS                : C++
PRINCIPLE            :WORA(write once run anywhere)

USES
------
-WebApplications
-MobileApplications
-ClientServerApplications
-EmbeddedSystems
-Robotics
-SAP
-GETTING JOB

PARTS OF JAVA
----------------
1.J2SE/JSE(JAVA 2 STD EDITION)
2.J2EE/JEE(JAVA 2 ENTRPISE EDITION)
3.J2ME/JME(JAVA 2 MICRO EDITION)

Version History of JAVA:
-------------------------
JDK Alpha and Beta (1995)
JDK 1.0 (23rd Jan 1996)
JDK 1.1 (19th Feb 1997)
J2SE 1.2 (8th Dec 1998)
J2SE 1.3 (8th May 2000)
J2SE 1.4 (6th Feb 2002)
J2SE 5.0 (30th Sep 2004)
Java SE 6 (11th Dec 2006)
Java SE 7 (28th July 2011)
Java SE 8 (18th Mar 2014)
Java SE 9 (21st Sep 2017)
Java SE 10 (20th Mar 2018)
Java SE 11 (11 September, 25th 2018)
Java SE 12 (15 March, 19th 2019)
Java SE 13 (15 September, 17th 2019)
Java SE 14 (14 March, 17th 2020)
Java SE 15 (15Expected in September 2020)

 
FEATURES OF JAVA:-
------------------
A list of most important features of Java.

Simple:
--------
-Simple to learn(Syntax's)
Object-Oriented :
----------------------
Java is an object-oriented programming language. Everything in Java is an object. 
Object-oriented means we organize our software as a combination of different types of objects that incorporates both data and behavior.

Object-oriented programming (OOPs) is a methodology that simplifies software development and 
maintenance by providing some rules.

Basic concepts of OOPs are:

Object
Class
Inheritance
Polymorphism
Abstraction
Encapsulation

Portable
------------
-Can be used with any other language
Platform independent
--------------------
Java code can be run on multiple platforms, for example, Windows, Linux, Sun Solaris, Mac/OS, etc. 
Java code is compiled by the compiler and converted into bytecode. 
This bytecode is a platform-independent code because it can be run on multiple platforms, 
i.e., Write Once and Run Anywhere(WORA).

-Secured
----------
-any probleum happens only JVM(JAVA VIRTUAL m/C) will get effected but operating system is safe.
-Robust
--------
-Most of things are automated
 Ex:garbage collection
-Multithreaded
-----------------
-Running multiple processeses(tasks) at same time.

Differences Between C and JAVA
-------------------------------
    C-lang                                          JAVA
----------------------------------------------------------------------------------------------------------
1.C is a Procedural Programming Language.	      -Java is an Object-Oriented language.

2.C was developed by Dennis M. Ritchie in 1972.	     -Java language was developed by James Gosling in 1995.

3.In the C declaration variable are declared          -In Java, you can declare a variable anywhere.
at the beginning of the block.	

4.C does not support threading.	                     -Java has a feature of threading.
 
5.C support pointers.	                             -Java does not support pointers.

6.Memory allocation can be done by malloc.	     -Memory allocation can be done by a new keyword.

7.Garbage collector needs to manage manually.	     -it is automatically managed by a garbage collector

10.C does not have a feature of overloading          -Java supports method overloading.
functionality.	






------------------------------------------------------------------------------------------------------------------
AIDE-IDE FOR C++ AND JAVA(ANDROID MOBILE APP) 
JEDONA(FOR IOS)
MODULE-1
---------
BASIC STRUCTURE OF PROGRAM
-------------------------------
public class Demo(1)
{
  public static void main(String args[])(2)
  {
     System.out.println("This is my first program");(3)
  }
}

Every program has 3- main parts
---------------------------------
1.class declaration
--------------------
Ex:  class Sample//default class Sample
   public class Demo
  
-It consists of 3 things
---------------------------
1.Access Modifier:It indicates that program is accessible to other user or not
     -There are 4 access modifiers in java public,private,protected and default
     -in above section class is public so it is freely accessible
     -All access modofiers will be in lower case.

2.class: class is a keyword(reserve word or predefine word) in java.
            -Every program must start with class keyword
            -all keyword must starts with smaller case so class-c is small
  
3.class Name:Every class has some name i.e class name or program name or file name
               -class name for standard should start with Capital letter 
               -Java File name  and class name must be same for remembering purpose
               -class name can only be combination of A-Z,a-z,0-9,$,_
Note:{//}---->scope of class

2.DEFNING MAIN METHOD
---------------------------
EX:  public static void main(String args[])
     {
           //LOGIC OF APP
     }
-it consists of 5 parts
1.AccessModifier
2.NonAccessModifier
3.return type
4.method name
5.command line arguments

method name
------------
-if anyword contains()--->we can identified it as a method
Ex: main(),run(),display() etc
-main is name of method

command line arguments
-----------------------
String args[]
String -s is capital
-This statements can be written in 3 ways
  1.String args[]
  2.String []args
  3.String[] args
Note:In syntax of main method only String-s is captial remaing all words starting letters are small.

3.Third part-Printing statement
-----------------------------------      
           
System.out.println("This is my sample program");
       
                 -System :it is a pre define class[class System]
                 --------
                 -out:   it is an object (predefine)
                 --------
                 -println():it is a method (predefine)
                  ---------

-In Simple println() is accesssed through out object but out object is present in system class.
-System is a classs which contains out object and out object is referring to  println()
-Whatever we gave in double qoutes that message will be printed as it is.

For Mobile Execution
----------------------
please install this app from play store:
AIDE-IDE FOR C++ AND JAVA(ANDROID) or DECODER
JEDONA(IOS)

Some more sample programs
--------------------------
Ex1:
public class Info
{
  public static void main(String args[])
  {
     System.out.println("This is my first program");
     System.out.println("In my first class");
     System.out.println("Of learning core java");
  }
}

Ex-2:
public class AboutMe
{
  public static void main(String args[])
  {
     System.out.println("My Name is : Paul");
     System.out.println("I am 22 years old");
     System.out.println("I have graduated from Osmania University");
     System.out.println("My Ambition is to be a programmer");
  }
}
variations in printing message
--------------------------------
println()--->print next message in new line.
print()  --->print next message in same line

Example-1
--------
public class Today
{
  public static void main(String args[])
  {
     System.out.println("Hi Rohan");
   System.out.print("Your order with id:1235 ");
   System.out.println("is on the way.");
   System.out.print("Please collect it");
  }
}
Output
-------
Hi Rohan
Your order with id:1235 is on the way.
Please collect it

Example-2
------------
public class AboutMe
{
  public static void main(String args[])
  {
     System.out.print("My Name is : Paul ");
     System.out.println("I am 22 years old");
     System.out.print("I have graduated from Osmania University ");
     System.out.println("My Ambition is to be a programmer");
  }
}
Output
--------
My Name is : Paul I am 22 years old
I have graduated from Osmania University My Ambition is to be a programmer

Commenting any line
--------------------
-if we put // in starting of statement it will be commented(not considered as part of program)
  Ex: //public class AboutMe

-if we put // in ending of statement after that whatever we write it will not be considered as part
 of program.
   Ex: public class AboutMe//class declaration
class Today//class declaration
{
  public static void main(String args[])//main method
  {
    //System.out.print("My Name is : Paul ");
     //System.out.println("I am 22 years old");
     System.out.print("I have graduated from Osmania University ");
    System.out.println("My Ambition is to be a programmer");
  }
}
Output
---------
I have graduated from Osmania University My Ambition is to be a programmer

\n :-
----
public class MyInformation
       {
            public static void main(String args[])
            {
                System.out.println("Name : Rohan  \n  DOB : 01-01-1992 \n Age:21 ");
                
            }
}
Output
-------        
Name : Rohan
DOB : 01-01-1992
Age:21


Notes: \n is used to break the line.
       -\n should must be in double quotes

DAILY TASK
-----------
-ALSO WRITE description SETION FOR EACH LINE
1.WAP to print your information 
   Output:
           Name : xyz(yourname)
           Age  : xx
           DOB  : xx-xx-XXXX

2.WAP to print your information 
   Output:
           Name: xyz
           YOP : xxxx
           Per :  xx%
           email : xxx
           clg : abcd

STEPS TO DESIGN An APPLICATION OF JAVA
--------------------------------------------
STEP-1: Select n Editor(Notepad,NP++,Editplus or IDE-Integrated development tool)
STEP-2: Write the logic of APP
STEP-3: Save the APP
STEP-4: Compilation
STEP-5: Execution
Note:In IDE's 75% of work is automatic.
     Ex:Eclipse,NetBeans etc.
